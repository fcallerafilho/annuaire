image: python:3.9-slim

stages:
  - test
  - deploy

variables:
  MYSQL_ROOT_PASSWORD: root_password

test_app:
  stage: test
  tags:
    - docker
  variables:
    SQLALCHEMY_DATABASE_URI: "mysql+pymysql://root:root_password@users_db/users_db"
    SQLALCHEMY_BINDS: '{"users_db":"mysql+pymysql://root:root_password@users_db/users_db","auth_db":"mysql+pymysql://root:root_password@auth_db/auth_db"}'
    SECRET_KEY: "test-key"
  services:
    - name: mysql:5.7
      alias: users_db
      variables:
        MYSQL_ROOT_PASSWORD: root_password
        MYSQL_DATABASE: users_db
    - name: mysql:5.7
      alias: auth_db
      variables:
        MYSQL_ROOT_PASSWORD: root_password
        MYSQL_DATABASE: auth_db
  before_script:
    - apt-get update
    - apt-get install -y default-libmysqlclient-dev build-essential netcat-openbsd
    - pip install -r backend/requirements.txt
    - pip install pytest pytest-cov
    # Wait for MySQL services
    - |
      echo "Waiting for MySQL services..."
      until nc -z users_db 3306 && nc -z auth_db 3306; do
        echo "Waiting for MySQL services..."
        sleep 1
      done
  script:
    - python -m pytest backend/tests/ -v

coverage:
  stage: test
  tags:
    - docker
  variables:
    SQLALCHEMY_DATABASE_URI: "mysql+pymysql://root:root_password@users_db/users_db"
    SQLALCHEMY_BINDS: '{"users_db":"mysql+pymysql://root:root_password@users_db/users_db","auth_db":"mysql+pymysql://root:root_password@auth_db/auth_db"}'
    SECRET_KEY: "test-key"
  services:
    - name: mysql:5.7
      alias: users_db
      variables:
        MYSQL_ROOT_PASSWORD: root_password
        MYSQL_DATABASE: users_db
    - name: mysql:5.7
      alias: auth_db
      variables:
        MYSQL_ROOT_PASSWORD: root_password
        MYSQL_DATABASE: auth_db
  before_script:
    - apt-get update
    - apt-get install -y default-libmysqlclient-dev build-essential netcat-openbsd
    - pip install -r backend/requirements.txt
    - pip install pytest pytest-cov
    # Wait for MySQL services
    - |
      echo "Waiting for MySQL services..."
      until nc -z users_db 3306 && nc -z auth_db 3306; do
        echo "Waiting for MySQL services..."
        sleep 1
      done
  script:
    - python -m pytest backend/tests/ --cov=app --cov-report=term-missing
  coverage: "/TOTAL.+ ([0-9]{1,3}%)/"

deploy:
  stage: deploy
  image: docker/compose:latest
  tags:
    - docker
  before_script:
    - cd /builds/annuaire/backend-ssi/backend
  script:
    - docker compose down --remove-orphans
    - docker compose up -d --build
  when: manual
