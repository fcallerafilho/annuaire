image: python:3.7-slim

variables:
  MYSQL_ROOT_PASSWORD: root_password

services:
  - name: mysql:5.7
    alias: users_db
    variables:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: users_db
  
  - name: mysql:5.7
    alias: auth_db
    variables:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: auth_db

before_script:
  - apt-get update
  - apt-get install -y default-libmysqlclient-dev build-essential netcat
  - pip install -r requirements.txt
  - pip install pytest pytest-cov
  # Attendre que users_db soit prêt
  - |
    echo "Waiting for users_db..."
    while ! nc -z users_db 3306; do
      sleep 1
    done
    echo "users_db is up"
  # Attendre que auth_db soit prêt
  - |
    echo "Waiting for auth_db..."
    while ! nc -z auth_db 3306; do
      sleep 1
    done
    echo "auth_db is up"

test_app:
  stage: test
  variables:
    SQLALCHEMY_DATABASE_URI: "mysql+pymysql://root:root_password@users_db:3306/users_db"
    SQLALCHEMY_BINDS: '{"users_db":"mysql+pymysql://root:root_password@users_db:3306/users_db","auth_db":"mysql+pymysql://root:root_password@auth_db:3306/auth_db"}'
    SECRET_KEY: "test-key"
  script:
    - python -m pytest tests/test_models.py -v
    - python -m pytest tests/test_user_service.py -v
    - python -m pytest tests/test_routes.py -v

coverage:
  stage: test
  variables:
    SQLALCHEMY_DATABASE_URI: "mysql+pymysql://root:root_password@users_db:3306/users_db"
    SQLALCHEMY_BINDS: '{"users_db":"mysql+pymysql://root:root_password@users_db:3306/users_db","auth_db":"mysql+pymysql://root:root_password@auth_db:3306/auth_db"}'
    SECRET_KEY: "test-key"
  script:
    - python -m pytest tests/ --cov=app --cov-report=term-missing
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'