image: python:3.9-slim

stages:
  - test
  - deploy

variables:
  MYSQL_ROOT_PASSWORD: root_password

services:
  - name: mysql:5.7
    alias: users_db
    variables:
      MYSQL_DATABASE: users_db
      MYSQL_ROOT_PASSWORD: root_password

  - name: mysql:5.7
    alias: auth_db
    variables:
      MYSQL_DATABASE: auth_db
      MYSQL_ROOT_PASSWORD: root_password

test_app:
  stage: test
  variables:
    SQLALCHEMY_DATABASE_URI: "mysql+pymysql://root:root_password@users_db:3306/users_db"
    SQLALCHEMY_BINDS: '{"users_db":"mysql+pymysql://root:root_password@users_db:3306/users_db","auth_db":"mysql+pymysql://root:root_password@auth_db:3306/auth_db"}'
    SECRET_KEY: "test-key"
  before_script:
    - echo "Starting test setup..."
    - apt-get update && apt-get install -y default-libmysqlclient-dev build-essential netcat-openbsd
    - pip install -r backend/requirements.txt
    - pip install pytest pytest-cov
    - echo "Checking MySQL services..."
    - nc -zv users_db 3306
    - nc -zv auth_db 3306
  script:
    - echo "Running tests..."
    - python -m pytest backend/tests/ -v

deploy:
  stage: deploy
  tags:
    - shell
  script:
    - cd backend
    - docker-compose -f docker-compose.yml down --remove-orphans
    - docker-compose -f docker-compose.yml up -d --build
  when: manual
